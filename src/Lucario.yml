name: Lucario
type: dark
# semanticHighlighting: true

palette:
  base:
    - &BG       "#2b3e50"
    - &FG       "#f8f8f2"
    - &Accent   "#5c98cd"
    - &Cyan     "#66d9ef"
    - &Green    "#72c05d"
    - &Orange   "#ffab28"
    - &Pink     "#ca94ff"
    - &Red      "#ff6541"
    - &Yellow   "#e6db74"
  other:
    - &LineHighlight  "#243443"
    - &Selection      "#19242f"
    - &NonText        "#61bbc8" #todo: replace Invisibles?
    - &HintGreen      "#a6e22e"
    - &HintYellow     "#f0cc04"
    - &HintRed        "#f92672"
  variations:
    - &BgShade1       "#22303f" # value 63 (-17)
    - &BgShade2       "#1b2732" # value 50 / for subtle borders b/w BG & BgShade1
    - &BgShade3       "#141c25" # value 37 (-43)
    - &BgTint1        "#344a5e" # luminance + 5
  tmp:
    - &Invalid      "#f8f8f0" # aka: Border
    - &DiffHeader   "#75715e"
    - &Invisibles   "#666666"


colors:
  # UI colors (non-syntax)
  # Reference: https://code.visualstudio.com/api/references/theme-color

  editor.background: *BG
  editor.foreground: *FG
  editorCursor.foreground: *FG
  editor.lineHighlightBackground: *LineHighlight
  editor.selectionBackground: *Selection

  editorLineNumber.foreground: !alpha [*FG, 80]
  editorLineNumber.activeForeground: *FG
  editorGutter.addedBackground: *HintGreen
  editorGutter.modifiedBackground: *HintYellow
  editorGutter.deletedBackground: *HintRed
  editorGutter.foldingControlForeground: *FG

  editorWhitespace.foreground: *Invisibles
  editorIndentGuide.background: !alpha [*Invisibles, 64]
  editorIndentGuide.activeBackground: *Invisibles
  editorRuler.foreground: !alpha [*Invisibles, 64]

  # Base colors
  focusBorder: *Accent
  foreground: *FG
  disabledForeground: # seen in menu dropdowns. default is #cccccc with 0.5 alpha
  widget.shadow: # default is fine, black with low alpha
  selection.background: *Selection
  descriptionForeground: # ???
  errorForeground: *HintRed
  icon.foreground: # default is ok, #c5c5c5
  sash.hoverBorder: # => focusBorder

  sideBar.background: *BgShade1
  sideBar.border: *BgShade2
  sideBarSectionHeader.background: *BG
  sideBarSectionHeader.border: *BgShade2

  activityBar.background: *BgShade3
  # activityBar.border:
  activityBar.foreground: # => foreground
  activityBar.activeBackground: *BgShade1
  activityBar.activeBorder: *Accent
  activityBar.inactiveForeground: !alpha [*Accent, c4]
  activityBarBadge.background: *Accent #nice: make it a shade
  activityBarBadge.foreground: *BgShade3
  activityBar.dropBorder: *Accent

  tab.inactiveBackground: *BgShade1
  editorGroupHeader.tabsBackground: *BgShade3

  statusBar.background: *BgShade3
  statusBarItem.remoteBackground: *BgShade3
  statusBarItem.remoteForeground: *Accent
  statusBar.debuggingBackground: !alpha [*Orange, a8]
  statusBar.debuggingForeground: "#000"
  statusBar.noFolderBackground: !alpha [*Pink, a0]
  statusBar.noFolderForeground: "#000"
  statusBar.focusBorder: *Accent

  editorGroup.border: *Cyan
  panel.border: *Cyan

  terminal.background: *BG
  terminal.foreground: *FG
  terminal.ansiBlack:           "#4f4f4f"
  terminal.ansiRed:             "#ff6c60"
  terminal.ansiGreen:           "#fbb036" # actually orange ¯\_ (ツ)_/¯
  terminal.ansiYellow:          "#ffffb6"
  terminal.ansiBlue:            "#5796ed"
  terminal.ansiMagenta:         "#ff73fd"
  terminal.ansiCyan:            "#8ee478" # actually green ¯\_ (ツ)_/¯
  terminal.ansiWhite:           "#eeeeee"
  terminal.ansiBrightBlack:     "#4f4f4f" # == standard
  terminal.ansiBrightRed:       "#fa6960"
  terminal.ansiBrightGreen:     "#fbb036" # == standard
  terminal.ansiBrightYellow:    "#feffb9"
  terminal.ansiBrightBlue:      "#6b9fed"
  terminal.ansiBrightMagenta:   "#fc6ffa"
  terminal.ansiBrightCyan:      "#8ee478" # == standard
  terminal.ansiBrightWhite:     "#ffffff"

  editorBracketHighlight.foreground1: *FG
  editorBracketHighlight.foreground2: *Cyan
  editorBracketHighlight.foreground3: *Yellow
  editorBracketHighlight.foreground4: *Pink
  editorBracketHighlight.foreground5: *Green
  editorBracketHighlight.foreground6: *Orange
  editorBracketHighlight.unexpectedBracket.foreground: # => errorForeground

  editorHoverWidget.foreground: # => foreground
  editorHoverWidget.background: *BgShade1
  editorHoverWidget.border: *Accent
  editorHoverWidget.highlightForeground:
  editorHoverWidget.statusBarBackground:


tokenColors:
  # syntax colors

  - name: Comment
    scope: comment
    settings:
      foreground: *Accent

  - name: String
    scope: string
    settings:
      foreground: *Yellow

  - name: Number
    scope: constant.numeric
    settings:
      foreground: *Pink

  - name: Built-in constant
    scope: constant.language
    settings:
      foreground: *Pink

  - name: User-defined constant
    scope:
      - constant.character
      - constant.other
    settings:
      foreground: *Pink

  - name: Constant catch-all
    scope:
      - constant
    settings:
      foreground: *Pink

  - name: Instance variable
    scope: variable.other.readwrite.instance
    settings:
      foreground: *Orange

  - name: Escaped string (?)
    scope:
      - constant.character.escaped
      - constant.character.escape
      - string.source
      - string.source.ruby
    settings:
      foreground: *Pink

  - name: Keyword
    scope: keyword
    settings:
      foreground: *Red

  - name: Storage
    scope: storage
    settings:
      fontStyle: ""
      foreground: *Red

  - name: Storage type
    scope: storage.type
    settings:
      fontStyle: italic
      foreground: *Cyan

  - name: Class name
    scope: entity.name.class
    settings:
      fontStyle: underline
      foreground: *Green

  - name: Inherited class
    scope: entity.other.inherited-class
    settings:
      fontStyle: italic underline
      foreground: *Green

  - name: Function name
    scope: entity.name.function
    settings:
      fontStyle: ""
      foreground: *Green

  - name: Function argument
    scope: variable.parameter
    settings:
      fontStyle: italic
      foreground: *Orange

  - name: Tag name
    scope: entity.name.tag
    settings:
      fontStyle: italic
      foreground: *Red

  - name: Tag attribute
    scope:
      - entity.other.attribute-name
      - markup.heading
    settings:
      fontStyle: ""
      foreground: *Green

  - name: Library function
    scope: support.function
    settings:
      fontStyle: ""
      foreground: *Cyan

  - name: Library constant
    scope: support.constant
    settings:
      fontStyle: ""
      foreground: *Cyan

  - name: Library class/type
    scope:
      - support.type
      - support.class
    settings:
      fontStyle: italic
      foreground: *Cyan

  - name: Library variable
    scope:
      - support.other.variable
      - variable.unordered
      - variable.ordered
    settings:
      fontStyle: ""
      foreground: *Orange

  - name: Invalid
    scope:
      - invalid
      # - invalid.deprecated
    settings:
      fontStyle: ""
      foreground: *Invalid
      background: *Selection

  - name: Invalid deprecated
    scope: invalid.deprecated
    settings:
      foreground: *Invalid
      background: *Selection

  - name: diff.header
    scope:
      - meta.diff
      - meta.diff.header
    settings:
      foreground: *DiffHeader

  - name: diff.deleted
    scope: markup.deleted
    settings:
      foreground: *HintRed

  - name: diff.inserted
    scope: markup.inserted
    settings:
      foreground: *HintGreen

  - name: diff.changed
    scope: markup.changed
    settings:
      foreground: *HintYellow

  - name: Markup emphasis
    scope:
      - markup.bold
      - markup.italic
    settings:
      foreground: *Red

  - name: Markup raw
    scope: markup.raw
    settings:
      foreground: *Cyan

  - scope:
      - punctuation.definition.tag.xml.plist
      - constant.name.xml
    settings:
      foreground: *FG
