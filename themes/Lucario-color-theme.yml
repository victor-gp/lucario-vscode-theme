name: Lucario
type: dark
# semanticHighlighting: true

palette:
  base:
    - &BG       "#2b3e50"
    - &FG       "#f8f8f2"
    - &Accent   "#5c98cd"
    - &Cyan     "#66d9ef"
    - &Green    "#72c05d"
    - &Orange   "#ffab28"
    - &Pink     "#ca94ff"
    - &Red      "#ff6541"
    - &Yellow   "#e6db74"
    - &LineHighlight  "#243443"
    - &Selection      "#19242f"
  ui: # One Dark
    - &bg-lv-1          "#243343"
    - &bg-lv-2          "#19242f"
    - &bg-lv-3          "#141c25"
    - &bg-lv-1-hover    "#27384a"
    - &bg-lv-3-hover    "#1e2c39"
    - &bg-lv-3-active   "#19242f"
    - &border-base      "#0f161c"
    - &fg-base          "#99a8b8"
    - &fg-subtle        "#99a8b899"
    - &fg-highlight     "#d5dbe2"
    - &fg-selected      "#f"
  other:
    - &NonText        "#61bbc8" #todo: replace Invisibles?
    - &HintGreen      "#a6e22e"
    - &HintYellow     "#f0cc04"
    - &HintRed        "#f92672"
    - &transparent    !alpha ["#f00", 0]
  variations:
    - &BgShade1       "#22303f" # value 63 (-17)
    - &BgShade2       "#1b2732" # value 50 / for subtle borders b/w BG & BgShade1
    - &BgShade3       "#141c25" # value 37 (-43)
    - &BgTint1        "#344a5e" # luminance + 5
    - &AccentTint1    "#65a6df" # Accent { luminance + 5 }
    - &AccentShade1   "#548bbc" # Accent { luminance - 5 }
  tmp:
    - &Invalid      "#f8f8f0" # aka: Border
    - &DiffHeader   "#75715e"
    - &Invisibles   "#666666"


colors:
  # UI colors (non-syntax)
  # Reference: https://code.visualstudio.com/api/references/theme-color

  editor.background: *BG
  editor.foreground: *FG
  editorCursor.foreground: *FG
  editor.lineHighlightBackground: *LineHighlight
  editor.selectionBackground: *Selection

  editorLineNumber.foreground: !alpha [*FG, 80]
  editorLineNumber.activeForeground: *FG
  editorGutter.addedBackground: *HintGreen
  editorGutter.modifiedBackground: *HintYellow
  editorGutter.deletedBackground: *HintRed
  editorGutter.foldingControlForeground: *FG

  editorWhitespace.foreground: *Invisibles
  editorIndentGuide.background: !alpha [*Invisibles, 64]
  editorIndentGuide.activeBackground: *Invisibles
  editorRuler.foreground: !alpha [*Invisibles, 64]

  # Base colors
  focusBorder: *Accent
  foreground: *FG
  disabledForeground: # seen in menu dropdowns. default is #cccccc with 0.5 alpha
  widget.shadow: # default is fine, black with low alpha
  selection.background: *Selection
  descriptionForeground: # ???
  errorForeground: *HintRed
  icon.foreground: # default is ok, #c5c5c5
  sash.hoverBorder: # => focusBorder

  sideBar.background: *bg-lv-3
  sideBar.foreground: *fg-base # => foreground #todo
  sideBar.border: *border-base
  sideBar.dropBackground: #todo
  sideBarTitle.foreground: # => sideBar.foreground
  sideBarSectionHeader.background: *bg-lv-2
  sideBarSectionHeader.foreground: # => sideBar.foreground
  sideBarSectionHeader.border: *border-base

  activityBar.background: *bg-lv-3
  activityBar.inactiveForeground: *fg-subtle # aka: .foreground
  activityBar.border: *border-base
  activityBar.activeBackground: *bg-lv-2
  activityBar.foreground: *fg-highlight # aka: .activeForeground
  activityBar.activeBorder: *Accent
  activityBarBadge.background: *Accent #fixme: darken
  activityBarBadge.foreground: *bg-lv-3
  activityBar.dropBorder: *Accent
  activityBar.focusBorder: # => focusBorder

  editorGroupHeader.tabsBackground: *BgShade3
  editorGroupHeader.tabsBorder: *BgShade1
  editorGroupHeader.border: # none
  tab.activeBackground: *BgShade2
  tab.activeBorderTop: *AccentTint1
  tab.inactiveBackground: *BgShade3
  tab.border: *BgShade1

  breadcrumb.foreground: # Color of breadcrumb items.
  breadcrumb.background: *BgShade3
  breadcrumb.focusForeground: # Color of focused breadcrumb items.
  breadcrumb.activeSelectionForeground: # Color of selected breadcrumb items.
  breadcrumbPicker.background: *BgShade3 # = breadcrumb.background

  statusBar.background: *bg-lv-3
  statusBar.foreground: *fg-base # => foreground #todo
  statusBar.border: *border-base
  statusBarItem.activeBackground: *bg-lv-3-active
  statusBarItem.hoverBackground: *bg-lv-3-hover
  # todo: Item + prominent, error, warning, etc.
  statusBarItem.remoteBackground: *bg-lv-3
  statusBarItem.remoteForeground: *fg-base
  statusBar.debuggingBackground: !alpha [*Orange, a8]
  statusBar.debuggingForeground: "#000"
  statusBar.debuggingBorder: *transparent
  statusBar.noFolderBackground: !alpha [*Pink, a0]
  statusBar.noFolderForeground: "#000"
  statusBar.noFolderBorder: *transparent
  statusBar.focusBorder: *Accent

  editorGroup.border: *Cyan
  panel.border: *Cyan

  scrollbar.shadow: # below breadcrumbs
  scrollbarSlider.background: !alpha [*FG, 16]
  scrollbarSlider.hoverBackground: !alpha [*FG, 32]
  scrollbarSlider.activeBackground: !alpha [*FG, 48]

  terminal.background: *BG
  terminal.foreground: *FG
  terminal.ansiBlack: *BG
  terminal.ansiRed:           "#ff6c60"
  terminal.ansiGreen:         "#8ee478"
  terminal.ansiYellow:        "#ffffb6"
  terminal.ansiBlue:          "#5796ed"
  terminal.ansiMagenta:       "#ff73fd"
  terminal.ansiCyan:          "#fbb036" # actually orange ¯\_ (ツ)_/¯
  terminal.ansiWhite:         "#eeeeee"
  terminal.ansiBrightBlack:   "#4f4f4f"
  terminal.ansiBrightRed:     "#fa6960"
  terminal.ansiBrightGreen:   "#8ee478" # == standard
  terminal.ansiBrightYellow:  "#feffb9"
  terminal.ansiBrightBlue:    "#6b9fed"
  terminal.ansiBrightMagenta: "#fc6ffa"
  terminal.ansiBrightCyan:    "#fbb036" # == standard
  terminal.ansiBrightWhite: *FG

  # Editor - Bracket pair colorization
  editorBracketHighlight.foreground1: *FG
  editorBracketHighlight.foreground2: *Cyan
  editorBracketHighlight.foreground3: *Yellow
  editorBracketHighlight.foreground4: *Pink
  editorBracketHighlight.foreground5: *Green
  editorBracketHighlight.foreground6: *Orange
  editorBracketHighlight.unexpectedBracket.foreground: *HintRed

  editorHoverWidget.foreground: # => foreground
  editorHoverWidget.background: *BgShade1
  editorHoverWidget.border: *Accent
  editorHoverWidget.highlightForeground:
  editorHoverWidget.statusBarBackground:

  # Text colors: for text documents like Markdown previews
  textBlockQuote.background: !alpha [*BgTint1, c0]
  textBlockQuote.border: !alpha [*Pink, 80]
  textCodeBlock.background: # not respected? / trying *BgShade3
  textLink.activeForeground: *Cyan
  textLink.foreground: *Cyan
  textPreformat.foreground: *Orange
  textSeparator.foreground: # not respected? / trying *Pink

  # Editor - Errors and warnings
  editorError.foreground: *HintRed # squiggles
  editorError.border: # overlaps with squiggles
  editorError.background:
  editorWarning.foreground: *HintYellow
  editorWarning.border:
  editorWarning.background:
  editorInfo.foreground: # Foreground color of info squiggles in the editor.
  editorInfo.border: # Border color of info boxes in the editor.
  editorInfo.background: # Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.
  editorHint.foreground: # Foreground color of hints in the editor.
  editorHint.border: # Border color of hint boxes in the editor.
  problemsErrorIcon.foreground: # The color used for the problems error icon.
  problemsWarningIcon.foreground: # The color used for the problems warning icon.
  problemsInfoIcon.foreground: # The color used for the problems info icon.


tokenColors:
  # syntax colors

  - name: Comment
    scope: comment
    settings:
      foreground: *Accent

  - name: String
    scope: string
    settings:
      foreground: *Yellow

  - name: Number
    scope: constant.numeric
    settings:
      foreground: *Pink

  - name: Built-in constant
    scope: constant.language
    settings:
      foreground: *Pink

  - name: User-defined constant
    scope:
      - constant.character
      - constant.other
    settings:
      foreground: *Pink

  - name: Constant catch-all
    scope:
      - constant
    settings:
      foreground: *Pink

  - name: Instance variable
    scope: variable.other.readwrite.instance
    settings:
      foreground: *Orange

  - name: Escaped string (?)
    scope:
      - constant.character.escaped
      - constant.character.escape
      - string.source
      - string.source.ruby
    settings:
      foreground: *Pink

  - name: Keyword
    scope: keyword
    settings:
      foreground: *Red

  - name: Storage
    scope: storage
    settings:
      fontStyle: ""
      foreground: *Red

  - name: Storage type
    scope: storage.type
    settings:
      foreground: *Cyan

  - name: Class name
    scope: entity.name.class
    settings:
      fontStyle: underline
      foreground: *Green

  - name: Inherited class
    scope: entity.other.inherited-class
    settings:
      fontStyle: underline
      foreground: *Green

  - name: Function name
    scope: entity.name.function
    settings:
      fontStyle: ""
      foreground: *Green

  - name: Function argument
    scope: variable.parameter
    settings:
      fontStyle: italic
      foreground: *Orange

  - name: Tag name
    scope: entity.name.tag
    settings:
      foreground: *Red

  - name: Tag attribute
    scope:
      - entity.other.attribute-name
      - markup.heading
    settings:
      fontStyle: ""
      foreground: *Green

  - name: Library function
    scope: support.function
    settings:
      fontStyle: ""
      foreground: *Cyan

  - name: Library constant
    scope: support.constant
    settings:
      fontStyle: ""
      foreground: *Cyan

  - name: Library class/type
    scope:
      - support.type
      - support.class
    settings:
      foreground: *Cyan

  - name: Library variable
    scope:
      - support.other.variable
      - variable.unordered
      - variable.ordered
    settings:
      fontStyle: ""
      foreground: *Orange

  - name: Invalid
    scope:
      - invalid
      # - invalid.deprecated
    settings:
      fontStyle: ""
      foreground: *Invalid
      # not supported in vscode:
      # background: *Selection

  - name: Invalid deprecated
    scope: invalid.deprecated
    settings:
      foreground: *Invalid
      # not supported in vscode:
      # background: *Selection

  - name: diff.header
    scope:
      - meta.diff
      - meta.diff.header
    settings:
      foreground: *DiffHeader

  - name: diff.deleted
    scope: markup.deleted
    settings:
      foreground: *HintRed

  - name: diff.inserted
    scope: markup.inserted
    settings:
      foreground: *HintGreen

  - name: diff.changed
    scope: markup.changed
    settings:
      foreground: *HintYellow

  - name: Markup emphasis
    scope:
      - markup.bold
      - markup.italic
    settings:
      foreground: *Red

  - name: Markup raw
    scope: markup.raw
    settings:
      foreground: *Cyan

  - name: Markdown - Heading
    scope: markup.heading.markdown
    settings:
      fontStyle: bold

  - name: Markdown - Bold
    scope: markup.bold.markdown
    settings:
      fontStyle: bold

  - name: Markdown - Italics
    scope: markup.italic.markdown
    settings:
      fontStyle: italic

  - name: Markdown - Raw Inline
    scope:
      - punctuation.definition.raw.markdown # backticks
      - markup.inline.raw.string.markdown
    settings:
      foreground: *Orange
      # json linter says: token background colors are currently not supported
      # background: *BgShade2

  - name: Markdown - Block-level punctuation
    scope:
      - markup.fenced_code.block.markdown punctuation.definition.markdown # code fences ```
      - punctuation.definition.quote.begin.markdown # blockquote >
      - meta.separator.markdown # ---
    settings:
      foreground: *Pink

  - name: Markdown - Code fences language
    scope: text.html.markdown fenced_code.block.language
    settings:
      foreground: *Pink

  - name: Markdown - Blockquote plain text
    scope: markup.quote.markdown meta.paragraph.markdown
    settings:
      foreground: !alpha [*FG, c0]

  - name: Markdown - Strikethrough punctuation # i.e: "~~"
    scope: punctuation.definition.strikethrough.markdown
    settings:
      foreground: *Red

  - name: Markdown - Strikethrough plain text
    scope: markup.strikethrough.markdown
    settings:
      foreground: !alpha [*FG, 80]

  - name: Markdown - Link title
    scope:
      - text.html.markdown string.other.link # for [link](url) and ![image](url)
      - text.html.markdown punctuation.definition.link # [] and ![]
    settings:
      foreground: *Yellow

  - name: Markdown - Link url
    scope:
      - text.html.markdown markup.underline.link
      - punctuation.definition.metadata.markdown # the parens in []()
    settings:
      foreground: !alpha [*Cyan, 90]

  - name: Markdown - Raw url # like "<url>"
    scope:
      - meta.link.inet.markdown markup.underline.link.markdown
      - meta.link.inet.markdown punctuation.definition.link.markdown # the angle quotes
    settings:
      foreground: *Cyan

  - name: Markdown - List item marker
    # i.e.: "- ", "* ", "1. "
    scope: text.html.markdown punctuation.definition.list.begin
    settings:
      foreground: *Pink

  - name: Markdown - HTML special characters
    # e.g.: &nbsp; or &amp;
    scope: text.html.markdown constant.character.entity.named
    settings:
      foreground: *Pink

  #nice: improve md syntax to pick up emoji, like ":emoji-code:"
  #      or perhaps I can target that with semantic scopes?

  - scope:
      - punctuation.definition.tag.xml.plist
      - constant.name.xml
    settings:
      foreground: *FG

  - name: YAML - Key
    scope: entity.name.tag.yaml
    settings:
      foreground: *Cyan

  - name: YAML - Anchor
    scope:
      - entity.name.type.anchor.yaml
      - punctuation.definition.anchor.yaml
    settings:
      foreground: *FG

  - name: YAML - Alias
    scope:
      - variable.other.alias.yaml
      - punctuation.definition.alias.yaml
    settings:
      foreground: *Orange

  - name: YAML - String quotes
    scope: source.yaml punctuation.definition.string
    settings:
      foreground: *FG

  - name: YAML - Tag
    scope: storage.type.tag-handle.yaml
    settings:
      foreground: *Red

  - name: YAML - Directive
    scope:
      - punctuation.definition.directive.begin.yaml
      - meta.directive.yaml keyword.other.directive
      - meta.directive.yaml constant.numeric
      - meta.directive.yaml storage.type
      - meta.directive.yaml support.type
    settings:
      foreground: *Green

  - name: YAML - Block scalar flow control
    scope:
      - source.yaml keyword.control.flow.block-scalar
      - storage.modifier.chomping-indicator.yaml
    settings:
      foreground: *FG

  - name: Ruby - Block parameters
    scope:
      - variable.other.block.ruby
    settings:
      foreground: *Orange
