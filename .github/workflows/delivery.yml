name: Delivery

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      ref_name:
        description: 'Git tag to publish & release'
        type: string
        required: true
      skip_publish:
        description: 'Skip VS Marketplace publication'
        type: boolean
        required: true

jobs:
  prep-and-publish:
    runs-on: ubuntu-latest
    env:
      # e.g.: "v2.3.2"
      VERSION_NAME: ${{ inputs.ref_name || github.ref_name }}
      SKIP_PUBLISH: ${{ inputs.skip_publish || false }}

    steps:
      - name: Compute version number
        id: version-number
        run: |
          # i.e.: drop the 'v' from 'vX.Y.Z'
          name="${{ env.VERSION_NAME }}"
          number=$(echo $name | sed 's/v//')
          echo "VERSION_NUMBER=$number" >> "$GITHUB_ENV"
          echo "OUT=$number" >> "$GITHUB_OUTPUT"

      - name: Git checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.VERSION_NAME }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: |
          npm ci
          npm install --global @vscode/vsce

      - name: Build the theme
        run: npm run build

      - name: Package the extension
        run: |
          vsce package $VERSION_NUMBER \
              --no-git-tag-version --no-update-package-json
          # packages as "lucario-theme-$VERSION_NUMBER.vsix"

      - name: Gather release assets
        run: |
          if [ -f "scripts/utils/extract_version_changelog.sh" ]; then
              scripts/utils/extract_version_changelog.sh > RELEASE_BODY.md
          else
              echo "Could not extract version changelog." > RELEASE_BODY.md
          fi
          mkdir release-assets
          cp "lucario-theme-$VERSION_NUMBER.vsix" release-assets
          json_assets_path="release-assets/Lucario-color-theme-$VERSION_NUMBER.json"
          cp themes/Lucario-color-theme.json "$json_assets_path"

      - uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            ./RELEASE_BODY.md
            ./release-assets
          retention-days: 1

      - name: Publish to Visual Studio Marketplace
        if: ${{ ! env.SKIP_PUBLISH }}
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          vsce publish --pat $VSCE_PAT \
              --packagePath lucario-theme-$VERSION_NUMBER.vsix

      #nice publish to Open VSX Registry

  draft-github-release:
    runs-on: ubuntu-latest
    needs: prep-and-publish
    permissions:
      contents: write
    env:
      # e.g.: "v2.3.2"
      VERSION_NAME: ${{ inputs.ref_name || github.ref_name }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: ./release-artifacts

      # (!) You have to manually publish the draft!
      - name: Create release draft on GitHub
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          draft: true
          name: ${{ env.VERSION_NAME }}
          tag_name: ${{ env.VERSION_NAME }}
          files: release-artifacts/release-assets/*
          body_path: release-artifacts/RELEASE_BODY.md
          generate_release_notes: true # appends the "Full Changelog" link to RELEASE_BODY.md
          make_latest: false # true would be problematic if we release a v1 minor version
